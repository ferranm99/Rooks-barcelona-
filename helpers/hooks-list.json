{
  "hooks": [
    {
      "name": "useBoundingclientrect",
      "description": "getBoundingClientRect hook for React."
    },
    {
      "name": "useBoundingclientrectRef",
      "description": "A hook that tracks the boundingclientrect of an element. It returns a callbackRef so that the element node if changed is easily tracked."
    },
    {
      "name": "useCountdown",
      "description": "Count down to a target timestamp and call callbacks every second (or provided peried)"
    },
    {
      "name": "useCounter",
      "description": "Counter hook for React."
    },
    {
      "name": "useDebounce",
      "description": ""
    },
    {
      "name": "useDidMount",
      "description": ""
    },
    {
      "name": "useDidUpdate",
      "description": ""
    },
    {
      "name": "useDocumentEventListener",
      "description": ""
    },
    {
      "name": "useEffectOnceWhen",
      "description": ""
    },
    {
      "name": "useEventListenerRef",
      "description": ""
    },
    {
      "name": "useForkRef",
      "description": ""
    },
    {
      "name": "useFreshRef",
      "description": ""
    },
    {
      "name": "useFreshTick",
      "description": ""
    },
    {
      "name": "useFullscreen",
      "description": ""
    },
    {
      "name": "useGeolocation",
      "description": ""
    },
    {
      "name": "useInViewRef",
      "description": ""
    },
    {
      "name": "useInput",
      "description": ""
    },
    {
      "name": "useIntersectionObserverRef",
      "description": ""
    },
    {
      "name": "useInterval",
      "description": ""
    },
    {
      "name": "useIntervalWhen",
      "description": ""
    },
    {
      "name": "useIsomorphicEffect",
      "description": ""
    },
    {
      "name": "useKey",
      "description": ""
    },
    {
      "name": "useKeyRef",
      "description": ""
    },
    {
      "name": "useKeys",
      "description": ""
    },
    {
      "name": "useLocalstorage",
      "description": ""
    },
    {
      "name": "useLocalstorageState",
      "description": ""
    },
    {
      "name": "useMapState",
      "description": ""
    },
    {
      "name": "useMediaMatch",
      "description": ""
    },
    {
      "name": "useMergeRefs",
      "description": ""
    },
    {
      "name": "useMouse",
      "description": ""
    },
    {
      "name": "useMultiSelectableList",
      "description": ""
    },
    {
      "name": "useMutationObserver",
      "description": ""
    },
    {
      "name": "useMutationObserverRef",
      "description": ""
    },
    {
      "name": "useNavigatorLanguage",
      "description": ""
    },
    {
      "name": "useOnWindowResize",
      "description": ""
    },
    {
      "name": "useOnWindowScroll",
      "description": ""
    },
    {
      "name": "useOnline",
      "description": ""
    },
    {
      "name": "useOutsideClick",
      "description": ""
    },
    {
      "name": "useOutsideClickRef",
      "description": ""
    },
    {
      "name": "usePrevious",
      "description": ""
    },
    {
      "name": "usePreviousDifferent",
      "description": ""
    },
    {
      "name": "usePreviousImmediate",
      "description": ""
    },
    {
      "name": "useQueueState",
      "description": ""
    },
    {
      "name": "useRaf",
      "description": ""
    },
    {
      "name": "useSelect",
      "description": ""
    },
    {
      "name": "useSelectableList",
      "description": ""
    },
    {
      "name": "useSessionstorage",
      "description": ""
    },
    {
      "name": "useSessionstorageState",
      "description": ""
    },
    {
      "name": "useStackState",
      "description": ""
    },
    {
      "name": "useThrottle",
      "description": ""
    },
    {
      "name": "useTimeAgo",
      "description": ""
    },
    {
      "name": "useTimeout",
      "description": ""
    },
    {
      "name": "useTimeoutWhen",
      "description": ""
    },
    {
      "name": "useToggle",
      "description": ""
    },
    {
      "name": "useUndoState",
      "description": ""
    },
    {
      "name": "useUpdateEffect",
      "description": ""
    },
    {
      "name": "useVisibilitySensor",
      "description": ""
    },
    {
      "name": "useWillUnmount",
      "description": ""
    },
    {
      "name": "useWindowEventListener",
      "description": ""
    },
    {
      "name": "useWindowScrollPosition",
      "description": ""
    },
    {
      "name": "useWindowSize",
      "description": ""
    },
    {
      "name": "useWorker",
      "description": ""
    }
  ]
}
