{
  "hooks": [
    {
      "name": "useBoundingclientrect",
      "description": "getBoundingClientRect hook for React."
    },
    { "name": "useInput", "description": "" },
    { "name": "useMutationObserverRef", "description": "" },
    { "name": "useStackState", "description": "" },
    {
      "name": "useBoundingclientrectRef",
      "description": "A hook that tracks the boundingclientrect of an element. It returns a callbackRef so that the element node if changed is easily tracked."
    },
    { "name": "useIntersectionObserverRef", "description": "" },
    { "name": "useNavigatorLanguage", "description": "" },
    { "name": "useThrottle", "description": "" },
    {
      "name": "useCountdown",
      "description": "Count down to a target timestamp and call callbacks every second (or provided peried)"
    },
    { "name": "useInterval", "description": "" },
    { "name": "useOnWindowResize", "description": "" },
    { "name": "useTimeAgo", "description": "" },
    { "name": "useCounter", "description": "Counter hook for React." },
    { "name": "useIntervalWhen", "description": "" },
    { "name": "useOnWindowScroll", "description": "" },
    { "name": "useTimeout", "description": "" },
    { "name": "useDebounce", "description": "" },
    { "name": "useIsomorphicEffect", "description": "" },
    { "name": "useOnline", "description": "" },
    { "name": "useTimeoutWhen", "description": "" },
    { "name": "useDidMount", "description": "" },
    { "name": "useKey", "description": "" },
    { "name": "useOutsideClick", "description": "" },
    { "name": "useToggle", "description": "" },
    { "name": "useDidUpdate", "description": "" },
    { "name": "useKeyRef", "description": "" },
    { "name": "useOutsideClickRef", "description": "" },
    { "name": "useUndoState", "description": "" },
    { "name": "useDocumentEventListener", "description": "" },
    { "name": "useKeys", "description": "" },
    { "name": "usePrevious", "description": "" },
    { "name": "useUpdateEffect", "description": "" },
    { "name": "useEffectOnceWhen", "description": "" },
    { "name": "useLocalstorage", "description": "" },
    { "name": "usePreviousDifferent", "description": "" },
    { "name": "useVisibilitySensor", "description": "" },
    { "name": "useEventListenerRef", "description": "" },
    { "name": "useLocalstorageState", "description": "" },
    { "name": "usePreviousImmediate", "description": "" },
    { "name": "useWillUnmount", "description": "" },
    { "name": "useForkRef", "description": "" },
    { "name": "useMapState", "description": "" },
    { "name": "useQueueState", "description": "" },
    { "name": "useWindowEventListener", "description": "" },
    { "name": "useFreshRef", "description": "" },
    { "name": "useMediaMatch", "description": "" },
    { "name": "useRaf", "description": "" },
    { "name": "useWindowScrollPosition", "description": "" },
    { "name": "useFreshTick", "description": "" },
    { "name": "useMergeRefs", "description": "" },
    { "name": "useSelect", "description": "" },
    { "name": "useWindowSize", "description": "" },
    { "name": "useFullscreen", "description": "" },
    { "name": "useMouse", "description": "" },
    { "name": "useSelectableList", "description": "" },
    { "name": "useWorker", "description": "" },
    { "name": "useGeolocation", "description": "" },
    { "name": "useMultiSelectableList", "description": "" },
    { "name": "useSessionstorage", "description": "" },
    { "name": "useInViewRef", "description": "" },
    { "name": "useMutationObserver", "description": "" },
    { "name": "useSessionstorageState", "description": "" }
  ]
}
