name: Version bump

on:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-latest  
    env:
      ALGOLIA_API_KEY:   ${{ secrets.ALGOLIA_API_KEY }}
    steps:
      - name: "Check if user has write access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout the tag
        uses: actions/checkout@master
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          version: 12.x
      - name: Get tag info
        id: tags
        uses: ./.github/actions/get-release-tags      
      - name: Generate the changelog
        id: changelog
        uses: ./.github/actions/generate-lerna-changelog
        with:
          from: ${{ steps.tags.outputs.old }}
          to: ${{ steps.tags.outputs.new }}
        env:
          GITHUB_AUTH: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if tag is stable
        id: tag_is_stable
        uses: ./.github/actions/tag-is-stable
        with:
          tag: ${{steps.tags.outputs.new}}
      # - name: Check if releasing from master
      #   id: is_master
      #   uses: ./.github/actions/ref-matches-branch
      #   with:
      #     name: master
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}          
      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true' # Over here!
        run: yarn
      - name: test
        run: yarn test      
      - name: Create a draft GitHub release
        uses: ./.github/actions/publish-github-release
        with:
          tag: ${{ steps.tags.outputs.new }}
          changelog: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.BOT_TOKEN }}
          is-tag-stable: ${{steps.tag_is_stable.outputs.result}}      
      - name: yarn build
        run: yarn build:ci
      - name: Generate docusaurus
        if: steps.tag_is_stable.outputs.result == 1
        run: yarn run readme-to-docs
      - name: Build docusaurus
        if: steps.tag_is_stable.outputs.result == 1
        run: yarn build:docs
      - name: Version docusaurus
        if: steps.tag_is_stable.outputs.result == 1
        run:  cd packages/docusaurus && yarn run docs-version ${{steps.tags.outputs.new}}
      - name: Commit docusaurus
        if: steps.tag_is_stable.outputs.result == 1
        run: |
          git add .
          git -c user.name="imbhargav5" -c user.email="imbhargav5@users.noreply.github.com" \
            commit -m "Update ${{ steps.tags.outputs.new }} docusaurus [skip ci]" --no-verify --quiet
          git push "https://imbhargav5:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" master      
      - name: Update CHANGELOG.md
        if: steps.tag_is_stable.outputs.result == 1
        uses: ./.github/actions/update-changelog
        with:
          changelog: ${{ steps.changelog.outputs.changelog }}
      - name: Commit CHANGELOG.md
        if: steps.tag_is_stable.outputs.result == 1
        run: |
          git add CHANGELOG.md
          git -c user.name="imbhargav5" -c user.email="imbhargav5@users.noreply.github.com" \
            commit -m "Add ${{ steps.tags.outputs.new }} to CHANGELOG.md [skip ci]" --no-verify --quiet
          git push -u "https://imbhargav5:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" master
  always_job:
    name: Aways run job
    runs-on: ubuntu-latest
    steps:
      - name: Always run
        run: echo "This job is used to prevent the workflow to fail when all other jobs are skipped."
